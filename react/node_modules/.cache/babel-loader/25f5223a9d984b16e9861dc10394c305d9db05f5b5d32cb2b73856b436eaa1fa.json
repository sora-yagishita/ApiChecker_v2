{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ygst_\\\\myFile\\\\ApiChecker\\\\src\\\\StatusDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StatusDisplay() {\n  _s();\n  const [statusCode, setStatusCode] = useState(null);\n  useEffect(() => {\n    const endpointData = require('./endpoints.json');\n    const {\n      apiEndpoint,\n      apiParameters\n    } = endpointData;\n    const fetchStatusCode = async () => {\n      try {\n        const response = await fetch(apiEndpoint, {\n          method: 'GET'\n        });\n\n        // ステータスコードを取得\n        const status = response.status;\n        setStatusCode(status);\n      } catch (error) {\n        setStatusCode(\"404\");\n        console.error('API呼び出し中にエラーが発生しました', error);\n      }\n    };\n    fetchStatusCode();\n    const intervalId = setInterval(fetchStatusCode, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u30B9\\u30C6\\u30FC\\u30BF\\u30B9\\u30B3\\u30FC\\u30C9: \", statusCode]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(StatusDisplay, \"g8V8V2OJdsYEHZz1ha3YmWq/8bk=\");\n_c = StatusDisplay;\nexport default StatusDisplay;\nvar _c;\n$RefreshReg$(_c, \"StatusDisplay\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","StatusDisplay","_s","statusCode","setStatusCode","endpointData","require","apiEndpoint","apiParameters","fetchStatusCode","response","fetch","method","status","error","console","intervalId","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ygst_/myFile/ApiChecker/src/StatusDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction StatusDisplay() {\r\n  const [statusCode, setStatusCode] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const endpointData = require('./endpoints.json');\r\n    const { apiEndpoint, apiParameters } = endpointData;\r\n\r\n    const fetchStatusCode = async () => {\r\n      try {\r\n        const response = await fetch(apiEndpoint, {\r\n          method: 'GET',\r\n        });\r\n\r\n        // ステータスコードを取得\r\n        const status = response.status;\r\n        setStatusCode(status);\r\n      } catch (error) {\r\n        setStatusCode(\"404\");\r\n        console.error('API呼び出し中にエラーが発生しました', error);\r\n      }\r\n    };\r\n\r\n    fetchStatusCode();\r\n\r\n    const intervalId = setInterval(fetchStatusCode, 1000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <p>ステータスコード: {statusCode}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatusDisplay;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMO,YAAY,GAAGC,OAAO,CAAC,kBAAkB,CAAC;IAChD,MAAM;MAAEC,WAAW;MAAEC;IAAc,CAAC,GAAGH,YAAY;IAEnD,MAAMI,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,WAAW,EAAE;UACxCK,MAAM,EAAE;QACV,CAAC,CAAC;;QAEF;QACA,MAAMC,MAAM,GAAGH,QAAQ,CAACG,MAAM;QAC9BT,aAAa,CAACS,MAAM,CAAC;MACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdV,aAAa,CAAC,KAAK,CAAC;QACpBW,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC;IAEDL,eAAe,CAAC,CAAC;IAEjB,MAAMO,UAAU,GAAGC,WAAW,CAACR,eAAe,EAAE,IAAI,CAAC;IAErD,OAAO,MAAMS,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA;IAAAmB,QAAA,eACEnB,OAAA;MAAAmB,QAAA,GAAG,oDAAU,EAAChB,UAAU;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV;AAACrB,EAAA,CAlCQD,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAoCtB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}