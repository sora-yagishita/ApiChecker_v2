{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ygst_\\\\myFile\\\\myProject\\\\ApiChecker\\\\src\\\\StatusDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StatusDisplay() {\n  _s();\n  const [apiInfo, setApiInfo] = useState([]);\n  const [statusCodes, setStatusCodes] = useState({});\n  const [lastApiRequestTime, setLastApiRequestTime] = useState(null);\n  useEffect(() => {\n    const endpointData = require('./endpoints.json');\n    const apiInfo = endpointData.apiInfo;\n    setApiInfo(apiInfo);\n    apiInfo.forEach(api => {\n      fetchStatusCode(api);\n    });\n    const intervalId = setInterval(() => {\n      apiInfo.forEach(api => {\n        fetchStatusCode(api);\n      });\n    }, 3600000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const fetchStatusCode = async api => {\n    try {\n      const response2 = axios.get < [] > (api.apiEndpoint, {\n        params: {}\n      });\n      const response = await fetch(api.apiEndpoint, {\n        method: 'GET'\n      });\n      const status = response.status;\n      setStatusCodes(prevStatusCodes => ({\n        ...prevStatusCodes,\n        [api.apiName]: status\n      }));\n      setLastApiRequestTime(new Date());\n    } catch (error) {\n      console.error(`${api.apiName} API呼び出し中にエラーが発生しました`, error);\n      setStatusCodes(prevStatusCodes => ({\n        ...prevStatusCodes,\n        [api.apiName]: 'Error'\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [apiInfo.map(api => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"API\\u540D: \", api.apiName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u30B9\\u30C6\\u30FC\\u30BF\\u30B9\\u30B3\\u30FC\\u30C9: \", statusCodes[api.apiName]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, api.apiName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u6700\\u7D42\\u66F4\\u65B0\\u6642\\u9593: \", lastApiRequestTime ? lastApiRequestTime.toLocaleTimeString() : 'まだ送信されていません']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(StatusDisplay, \"UfPgn0ypdLfdm0kLmZOHikQBmrE=\");\n_c = StatusDisplay;\nexport default StatusDisplay;\nvar _c;\n$RefreshReg$(_c, \"StatusDisplay\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","StatusDisplay","_s","apiInfo","setApiInfo","statusCodes","setStatusCodes","lastApiRequestTime","setLastApiRequestTime","endpointData","require","forEach","api","fetchStatusCode","intervalId","setInterval","clearInterval","response2","get","apiEndpoint","params","response","fetch","method","status","prevStatusCodes","apiName","Date","error","console","children","map","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/ygst_/myFile/myProject/ApiChecker/src/StatusDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction StatusDisplay() {\r\n  const [apiInfo, setApiInfo] = useState([]);\r\n  const [statusCodes, setStatusCodes] = useState({});\r\n  const [lastApiRequestTime, setLastApiRequestTime] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const endpointData = require('./endpoints.json');\r\n    const apiInfo = endpointData.apiInfo;\r\n\r\n    setApiInfo(apiInfo);\r\n\r\n    apiInfo.forEach((api) => {\r\n      fetchStatusCode(api);\r\n    });\r\n\r\n    const intervalId = setInterval(() => {\r\n      apiInfo.forEach((api) => {\r\n        fetchStatusCode(api);\r\n      });\r\n    }, 3600000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const fetchStatusCode = async (api) => {\r\n    try {\r\n      const response2 = axios.get<[]>(\r\n        api.apiEndpoint,\r\n        {\r\n          params: {\r\n\r\n          }\r\n        }\r\n      )\r\n\r\n      const response = await fetch(api.apiEndpoint, {\r\n        method: 'GET',\r\n      });\r\n\r\n      const status = response.status;\r\n      setStatusCodes((prevStatusCodes) => ({\r\n        ...prevStatusCodes,\r\n        [api.apiName]: status,\r\n      }));\r\n\r\n      setLastApiRequestTime(new Date());\r\n    } catch (error) {\r\n      console.error(`${api.apiName} API呼び出し中にエラーが発生しました`, error);\r\n      setStatusCodes((prevStatusCodes) => ({\r\n        ...prevStatusCodes,\r\n        [api.apiName]: 'Error',\r\n      }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {apiInfo.map((api) => (\r\n        <div key={api.apiName}>\r\n          <p>API名: {api.apiName}</p>\r\n          <p>ステータスコード: {statusCodes[api.apiName]}</p>\r\n        </div>\r\n      ))}\r\n      <p>最終更新時間: {lastApiRequestTime ? lastApiRequestTime.toLocaleTimeString() : 'まだ送信されていません'}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatusDisplay;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}