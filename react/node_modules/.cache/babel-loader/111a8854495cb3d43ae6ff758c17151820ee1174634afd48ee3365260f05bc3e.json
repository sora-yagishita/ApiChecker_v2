{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ygst_\\\\myFile\\\\myProject\\\\ApiChecker2\\\\react\\\\src\\\\StatusDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ApiResultGraph from './ApiResultGraph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StatusDisplay() {\n  _s();\n  const [apiInfo, setApiInfo] = useState([]);\n  const [statusCodes, setStatusCodes] = useState({});\n  const [lastApiRequestTime, setLastApiRequestTime] = useState({});\n  useEffect(() => {\n    const endpointData = require('./endpoints.json');\n    const apiInfo = endpointData.apiInfo;\n    setApiInfo(apiInfo);\n    apiInfo.forEach(api => {\n      fetchStatusCode(api);\n      setInterval(() => fetchStatusCode(api), api.requestIntervalMin * 60000);\n    });\n    return () => {\n      apiInfo.forEach(api => {\n        clearInterval(api.intervalId);\n      });\n    };\n  }, []);\n  const fetchStatusCode = async api => {\n    const params = convertJson(api);\n    axios.defaults.headers.common['Content-Type'] = 'application/json';\n    await axios.get(api.apiEndpoint, {\n      params\n    }).then(response => {\n      setStatus(api.apiName, response.status);\n      addAipRsult(api.apiName, response.status);\n    }).catch(error => {\n      setStatus(api.apiName, error.response.status);\n      addAipRsult(api.apiName, error.response.status);\n    });\n  };\n  const convertJson = api => {\n    const apiParams = {};\n    api.apiParams.forEach(param => {\n      apiParams[param.key] = param.value;\n    });\n    return apiParams;\n  };\n  const setStatus = (apiName, status) => {\n    setStatusCodes(prevStatusCodes => ({\n      ...prevStatusCodes,\n      [apiName]: status\n    }));\n    setLastApiRequestTime(lastApiRequestTime => ({\n      ...lastApiRequestTime,\n      [apiName]: new Date()\n    }));\n  };\n  const addAipRsult = async (apiName, status) => {\n    await axios.post('http://localhost:8080/api-result/add-apiResult', {\n      apiName: apiName,\n      ApiStatus: String(status),\n      ApiDateTime: new Date()\n    }).then(response => {}).catch(error => {\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: apiInfo.map(api => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"API\\u540D: \", api.apiName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u30B9\\u30C6\\u30FC\\u30BF\\u30B9\\u30B3\\u30FC\\u30C9: \", statusCodes[api.apiName]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u6700\\u7D42\\u66F4\\u65B0\\u6642\\u9593: \", lastApiRequestTime[api.apiName] ? lastApiRequestTime[api.apiName].toLocaleTimeString() : 'まだ送信されていません']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ApiResultGraph, {\n        apiName: api.apiName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, api.apiName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(StatusDisplay, \"JxB7OLrZZKwrOh+tyWTpyZNhUrE=\");\n_c = StatusDisplay;\nexport default StatusDisplay;\nvar _c;\n$RefreshReg$(_c, \"StatusDisplay\");","map":{"version":3,"names":["React","useState","useEffect","axios","ApiResultGraph","jsxDEV","_jsxDEV","StatusDisplay","_s","apiInfo","setApiInfo","statusCodes","setStatusCodes","lastApiRequestTime","setLastApiRequestTime","endpointData","require","forEach","api","fetchStatusCode","setInterval","requestIntervalMin","clearInterval","intervalId","params","convertJson","defaults","headers","common","get","apiEndpoint","then","response","setStatus","apiName","status","addAipRsult","catch","error","apiParams","param","key","value","prevStatusCodes","Date","post","ApiStatus","String","ApiDateTime","console","log","children","map","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/ygst_/myFile/myProject/ApiChecker2/react/src/StatusDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ApiResultGraph from './ApiResultGraph';\r\n\r\nfunction StatusDisplay() {\r\n  const [apiInfo, setApiInfo] = useState([]);\r\n  const [statusCodes, setStatusCodes] = useState({});\r\n  const [lastApiRequestTime, setLastApiRequestTime] = useState({});\r\n\r\n  useEffect(() => {\r\n    const endpointData = require('./endpoints.json');\r\n    const apiInfo = endpointData.apiInfo;\r\n\r\n    setApiInfo(apiInfo);\r\n\r\n    apiInfo.forEach((api) => {\r\n      fetchStatusCode(api);\r\n      setInterval(() => fetchStatusCode(api), api.requestIntervalMin * 60000);\r\n    });\r\n\r\n    return () => {\r\n      apiInfo.forEach((api) => {\r\n        clearInterval(api.intervalId);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const fetchStatusCode = async (api) => {\r\n    const params = convertJson(api);\r\n    axios.defaults.headers.common['Content-Type'] = 'application/json'\r\n\r\n    await axios.get(\r\n      api.apiEndpoint,\r\n      {params}\r\n    ).then(response => {\r\n      setStatus(api.apiName, response.status);\r\n      addAipRsult(api.apiName, response.status);\r\n    }).catch(error => {\r\n      setStatus(api.apiName, error.response.status);\r\n      addAipRsult(api.apiName, error.response.status);\r\n    })\r\n  };\r\n\r\n  const convertJson = (api) => {\r\n    const apiParams = {};\r\n    api.apiParams.forEach((param) => {\r\n      apiParams[param.key] = param.value;\r\n    });\r\n    return apiParams;\r\n  }\r\n\r\n  const setStatus = (apiName, status) => {\r\n    setStatusCodes((prevStatusCodes) => ({\r\n      ...prevStatusCodes,\r\n      [apiName]: status,\r\n    }));\r\n    setLastApiRequestTime((lastApiRequestTime) => ({\r\n      ...lastApiRequestTime,\r\n      [apiName]: new Date(),\r\n    }));\r\n  }\r\n\r\n  const addAipRsult = async (apiName, status) => {\r\n    await axios.post('http://localhost:8080/api-result/add-apiResult',\r\n      {\r\n        apiName: apiName,\r\n        ApiStatus: String(status),\r\n        ApiDateTime: new Date(),\r\n      }\r\n    ).then(response => {\r\n    }).catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {apiInfo.map((api) => (\r\n        <div key={api.apiName}>\r\n          <p>API名: {api.apiName}</p>\r\n          <p>ステータスコード: {statusCodes[api.apiName]}</p>\r\n          <p>最終更新時間: {lastApiRequestTime[api.apiName] ? lastApiRequestTime[api.apiName].toLocaleTimeString() : 'まだ送信されていません'}</p>\r\n          <ApiResultGraph apiName={api.apiName} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatusDisplay;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}