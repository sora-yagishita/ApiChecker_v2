{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const getApi = createAsyncThunk('api/getApi', async () => {\n  const apiData = await fetch('http://localhost:8080/api/fetch').then(res => res.json());\n\n  // APIデータの各要素に対して、別のAPIを実行\n  const apiSettingData = await Promise.all(apiData.map(async apiItem => {\n    const settingResponse = await fetch(`http://localhost:8080/api-setting/fetch?api_id=${apiItem.api_id}`);\n    const settingData = await settingResponse.json();\n    return {\n      ...apiItem,\n      api_setting: settingData\n    };\n  }));\n\n  // 最終的なデータを返す\n  return apiSettingData;\n});\nexport const apiSlice = createSlice({\n  name: 'api',\n  initialState: {\n    api: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getApi.pending, state => {\n      state.loading = true;\n    }).addCase(getApi.fulfilled, (state, action) => {\n      state.loading = false;\n      state.api = action.payload;\n      console.log(state.api);\n    }).addCase(getApi.rejected, state => {\n      state.loading = false;\n      state.error = true;\n    });\n  }\n});\nexport default apiSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getApi","apiData","fetch","then","res","json","apiSettingData","Promise","all","map","apiItem","settingResponse","api_id","settingData","api_setting","apiSlice","name","initialState","api","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","console","log","rejected","reducer"],"sources":["C:/Users/ygst_/myFile/myProject/ApiChecker2/react/src/apiSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const getApi = createAsyncThunk('api/getApi', async () => {\r\n  const apiData = await fetch('http://localhost:8080/api/fetch').then((res) =>\r\n    res.json()\r\n  );\r\n\r\n  // APIデータの各要素に対して、別のAPIを実行\r\n  const apiSettingData = await Promise.all(\r\n    apiData.map(async (apiItem) => {\r\n      const settingResponse = await fetch(`http://localhost:8080/api-setting/fetch?api_id=${apiItem.api_id}`);\r\n      const settingData = await settingResponse.json();\r\n      return { ...apiItem, api_setting: settingData };\r\n    })\r\n  );\r\n\r\n  // 最終的なデータを返す\r\n  return apiSettingData;\r\n});\r\n\r\nexport const apiSlice = createSlice({\r\n  name: 'api',\r\n  initialState: {\r\n    api: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getApi.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(getApi.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.api = action.payload;\r\n        console.log(state.api);\r\n      })\r\n      .addCase(getApi.rejected, (state) => {\r\n        state.loading = false;\r\n        state.error = true;\r\n      });\r\n  },\r\n});\r\n\r\nexport default apiSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,MAAM,GAAGD,gBAAgB,CAAC,YAAY,EAAE,YAAY;EAC/D,MAAME,OAAO,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC,CAACC,IAAI,CAAEC,GAAG,IACtEA,GAAG,CAACC,IAAI,CAAC,CACX,CAAC;;EAED;EACA,MAAMC,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAG,CACtCP,OAAO,CAACQ,GAAG,CAAC,MAAOC,OAAO,IAAK;IAC7B,MAAMC,eAAe,GAAG,MAAMT,KAAK,CAAE,kDAAiDQ,OAAO,CAACE,MAAO,EAAC,CAAC;IACvG,MAAMC,WAAW,GAAG,MAAMF,eAAe,CAACN,IAAI,CAAC,CAAC;IAChD,OAAO;MAAE,GAAGK,OAAO;MAAEI,WAAW,EAAED;IAAY,CAAC;EACjD,CAAC,CACH,CAAC;;EAED;EACA,OAAOP,cAAc;AACvB,CAAC,CAAC;AAEF,OAAO,MAAMS,QAAQ,GAAGjB,WAAW,CAAC;EAClCkB,IAAI,EAAE,KAAK;EACXC,YAAY,EAAE;IACZC,GAAG,EAAE,EAAE;IACPC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACxB,MAAM,CAACyB,OAAO,EAAGC,KAAK,IAAK;MAClCA,KAAK,CAACP,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDK,OAAO,CAACxB,MAAM,CAAC2B,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC5CF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACR,GAAG,GAAGU,MAAM,CAACC,OAAO;MAC1BC,OAAO,CAACC,GAAG,CAACL,KAAK,CAACR,GAAG,CAAC;IACxB,CAAC,CAAC,CACDM,OAAO,CAACxB,MAAM,CAACgC,QAAQ,EAAGN,KAAK,IAAK;MACnCA,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeL,QAAQ,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}