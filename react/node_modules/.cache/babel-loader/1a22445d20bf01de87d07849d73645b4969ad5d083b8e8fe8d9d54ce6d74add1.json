{"ast":null,"code":"var _jsxFileName = \"/app/react/src/ApiResultGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ApiResultGraph({\n  apiName\n}) {\n  _s();\n  const [apiResults, setApiResults] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/api-result/fetch-apiResult', {\n          params: {\n            apiName: apiName\n          }\n        });\n        setApiResults(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    // fetch data when fetchStatusCode is executed\n    fetchData();\n\n    // set interval to fetch data periodically\n    const intervalId = setInterval(fetchData, 60000);\n\n    // clear interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [apiName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [apiName, \" \\u306E API \\u7D50\\u679C\\u4E00\\u89A7\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: apiResults.map(result => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u30B9\\u30C6\\u30FC\\u30BF\\u30B9: \", result.ApiStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u66F4\\u65B0\\u65E5\\u6642: \", new Date(result.ApiDateTime).toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, result.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(ApiResultGraph, \"2BbUuoup99zG5ZpuzrInFps/6zs=\");\n_c = ApiResultGraph;\nexport default ApiResultGraph;\nvar _c;\n$RefreshReg$(_c, \"ApiResultGraph\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ApiResultGraph","apiName","_s","apiResults","setApiResults","fetchData","response","get","params","data","error","console","log","intervalId","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","map","result","ApiStatus","Date","ApiDateTime","toLocaleTimeString","id","_c","$RefreshReg$"],"sources":["/app/react/src/ApiResultGraph.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ApiResultGraph({ apiName }) {\r\n  const [apiResults, setApiResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/api-result/fetch-apiResult', {\r\n          params: {\r\n            apiName: apiName,\r\n          },\r\n        });\r\n        setApiResults(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    // fetch data when fetchStatusCode is executed\r\n    fetchData();\r\n\r\n    // set interval to fetch data periodically\r\n    const intervalId = setInterval(fetchData, 60000);\r\n\r\n    // clear interval when the component unmounts\r\n    return () => clearInterval(intervalId);\r\n  }, [apiName]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>{apiName} の API 結果一覧</h3>\r\n      <ul>\r\n        {apiResults.map((result) => (\r\n          <li key={result.id}>\r\n            <p>ステータス: {result.ApiStatus}</p>\r\n            <p>更新日時: {new Date(result.ApiDateTime).toLocaleTimeString()}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ApiResultGraph;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,kDAAkD,EAAE;UACnFC,MAAM,EAAE;YACNP,OAAO,EAAEA;UACX;QACF,CAAC,CAAC;QACFG,aAAa,CAACE,QAAQ,CAACG,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;;IAED;IACAL,SAAS,CAAC,CAAC;;IAEX;IACA,MAAMQ,UAAU,GAAGC,WAAW,CAACT,SAAS,EAAE,KAAK,CAAC;;IAEhD;IACA,OAAO,MAAMU,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,CAACZ,OAAO,CAAC,CAAC;EAEb,oBACEF,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,GAAKf,OAAO,EAAC,sCAAW;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BrB,OAAA;MAAAiB,QAAA,EACGb,UAAU,CAACkB,GAAG,CAAEC,MAAM,iBACrBvB,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UAAAiB,QAAA,GAAG,kCAAO,EAACM,MAAM,CAACC,SAAS;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChCrB,OAAA;UAAAiB,QAAA,GAAG,4BAAM,EAAC,IAAIQ,IAAI,CAACF,MAAM,CAACG,WAAW,CAAC,CAACC,kBAAkB,CAAC,CAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFzDE,MAAM,CAACK,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAClB,EAAA,CAxCQF,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AA0CvB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}