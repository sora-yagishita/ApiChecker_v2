{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ygst_\\\\myFile\\\\myProject\\\\ApiChecker2\\\\react\\\\src\\\\ApiResultGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: 'Chart.js Line Chart'\n    }\n  }\n};\nfunction ApiResultGraph({\n  apiName\n}) {\n  _s();\n  const [apiResults, setApiResults] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get('http://localhost:8080/api-result/fetch-apiResult', {\n        params: {\n          apiName: apiName\n        }\n      }).then(response => {\n        setApiResults(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n    fetchData();\n  }, [apiName]);\n  const graphData = {\n    labels: apiResults.map(item => item.apiDateTime),\n    datasets: [{\n      label: \"ステータスコード\",\n      data: apiResults.map(item => Number(item.apiStatus)),\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"chart\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: graphData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(ApiResultGraph, \"2BbUuoup99zG5ZpuzrInFps/6zs=\");\n_c = ApiResultGraph;\nexport default ApiResultGraph;\nvar _c;\n$RefreshReg$(_c, \"ApiResultGraph\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","options","responsive","plugins","legend","position","title","display","text","ApiResultGraph","apiName","_s","apiResults","setApiResults","fetchData","response","get","params","then","data","catch","error","console","log","graphData","labels","map","item","apiDateTime","datasets","label","Number","apiStatus","borderColor","backgroundColor","class","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ygst_/myFile/myProject/ApiChecker2/react/src/ApiResultGraph.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: 'top',\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: 'Chart.js Line Chart',\r\n    },\r\n  },\r\n};\r\n\r\nfunction ApiResultGraph({ apiName }) {\r\n  const [apiResults, setApiResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await axios.get('http://localhost:8080/api-result/fetch-apiResult', {\r\n        params: {\r\n          apiName: apiName,\r\n        },\r\n      }).then(response => {\r\n        setApiResults(response.data);\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n    };\r\n    fetchData();\r\n  }, [apiName]);\r\n\r\n\r\n  const graphData = {\r\n    labels: apiResults.map(item => item.apiDateTime),\r\n    datasets: [\r\n      {\r\n        label: \"ステータスコード\",\r\n        data: apiResults.map(item => Number(item.apiStatus)),\r\n        borderColor: 'rgb(53, 162, 235)',\r\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div class=\"chart\">\r\n      <Line\r\n        options={options}\r\n        data={graphData}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ApiResultGraph;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElBT,OAAO,CAACU,QAAQ,CACdT,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,OAAO,MAAMI,OAAO,GAAG;EACrBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE;IACPC,MAAM,EAAE;MACNC,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAED,SAASC,cAAcA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAM4B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,GAAG,CAAC,kDAAkD,EAAE;QACnFC,MAAM,EAAE;UACNP,OAAO,EAAEA;QACX;MACF,CAAC,CAAC,CAACQ,IAAI,CAACH,QAAQ,IAAI;QAClBF,aAAa,CAACE,QAAQ,CAACI,IAAI,CAAC;MAC9B,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;QAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IACJ,CAAC;IACDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAGb,MAAMc,SAAS,GAAG;IAChBC,MAAM,EAAEb,UAAU,CAACc,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,WAAW,CAAC;IAChDC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,UAAU;MACjBX,IAAI,EAAEP,UAAU,CAACc,GAAG,CAACC,IAAI,IAAII,MAAM,CAACJ,IAAI,CAACK,SAAS,CAAC,CAAC;MACpDC,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,oBACEnC,OAAA;IAAKoC,KAAK,EAAC,OAAO;IAAAC,QAAA,eAChBrC,OAAA,CAACX,IAAI;MACHa,OAAO,EAAEA,OAAQ;MACjBkB,IAAI,EAAEK;IAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC7B,EAAA,CAvCQF,cAAc;AAAAgC,EAAA,GAAdhC,cAAc;AAyCvB,eAAeA,cAAc;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}