{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// apiデータ取得\nconst fetchApiData = async () => {\n  const response = await fetch('http://localhost:8080/api/fetch');\n  return response.json();\n};\n\n// api-settingデータ取得\nconst fetchApiSettingData = async apiId => {\n  const response = await fetch(`http://localhost:8080/api-setting/fetch?api_id=${apiId}`);\n  return response.json();\n};\n\n// api-headerデータ取得\nconst fetchApiHeaderData = async apiSettingId => {\n  const response = await fetch(`http://localhost:8080/api-header-setting/fetch?api_setting_id=${apiSettingId}`);\n  return response.json();\n};\nexport const getApi = createAsyncThunk('api/getApi', async () => {\n  const apiData = await fetchApiData();\n  console.log(\"処置1\", apiData);\n  const apiSettingData = apiData.map(async apiItem => {\n    const apiSettingDatas = await fetchApiSettingData(apiItem.api_id);\n    console.log(\"設定\", apiSettingDatas);\n    return {\n      ...apiItem,\n      api_settings: apiSettingDatas\n    };\n  });\n  console.log(\"処置2\", apiData);\n  return Promise.all(apiSettingData);\n});\nexport const apiSlice = createSlice({\n  name: 'api',\n  initialState: {\n    api: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getApi.pending, state => {\n      state.loading = true;\n    }).addCase(getApi.fulfilled, (state, action) => {\n      state.loading = false;\n      state.api = action.payload;\n      console.log(state.api);\n    }).addCase(getApi.rejected, state => {\n      state.loading = false;\n      state.error = true;\n    });\n  }\n});\nexport default apiSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchApiData","response","fetch","json","fetchApiSettingData","apiId","fetchApiHeaderData","apiSettingId","getApi","apiData","console","log","apiSettingData","map","apiItem","apiSettingDatas","api_id","api_settings","Promise","all","apiSlice","name","initialState","api","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Users/ygst_/myFile/myProject/ApiChecker2/react/src/apiSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n// apiデータ取得\r\nconst fetchApiData = async () => {\r\n  const response = await fetch('http://localhost:8080/api/fetch');\r\n  return response.json();\r\n};\r\n\r\n// api-settingデータ取得\r\nconst fetchApiSettingData = async (apiId) => {\r\n  const response = await fetch(`http://localhost:8080/api-setting/fetch?api_id=${apiId}`);\r\n  return response.json();\r\n};\r\n\r\n// api-headerデータ取得\r\nconst fetchApiHeaderData = async (apiSettingId) => {\r\n  const response = await fetch(`http://localhost:8080/api-header-setting/fetch?api_setting_id=${apiSettingId}`);\r\n  return response.json();\r\n};\r\n\r\nexport const getApi = createAsyncThunk('api/getApi', async () => {\r\n  const apiData = await fetchApiData();\r\n  console.log(\"処置1\",apiData);\r\n\r\n  const apiSettingData = apiData.map(async (apiItem) => {\r\n    const apiSettingDatas = await fetchApiSettingData(apiItem.api_id);\r\n    console.log(\"設定\",apiSettingDatas);\r\n    return { ...apiItem, api_settings: apiSettingDatas};\r\n  });\r\n  console.log(\"処置2\",apiData);\r\n\r\n  return Promise.all(apiSettingData);\r\n});\r\n\r\nexport const apiSlice = createSlice({\r\n  name: 'api',\r\n  initialState: {\r\n    api: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getApi.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(getApi.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.api = action.payload;\r\n        console.log(state.api);\r\n      })\r\n      .addCase(getApi.rejected, (state) => {\r\n        state.loading = false;\r\n        state.error = true;\r\n      });\r\n  },\r\n});\r\n\r\nexport default apiSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;EAC/D,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,MAAMC,mBAAmB,GAAG,MAAOC,KAAK,IAAK;EAC3C,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAE,kDAAiDG,KAAM,EAAC,CAAC;EACvF,OAAOJ,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,MAAMG,kBAAkB,GAAG,MAAOC,YAAY,IAAK;EACjD,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAE,iEAAgEK,YAAa,EAAC,CAAC;EAC7G,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMK,MAAM,GAAGT,gBAAgB,CAAC,YAAY,EAAE,YAAY;EAC/D,MAAMU,OAAO,GAAG,MAAMT,YAAY,CAAC,CAAC;EACpCU,OAAO,CAACC,GAAG,CAAC,KAAK,EAACF,OAAO,CAAC;EAE1B,MAAMG,cAAc,GAAGH,OAAO,CAACI,GAAG,CAAC,MAAOC,OAAO,IAAK;IACpD,MAAMC,eAAe,GAAG,MAAMX,mBAAmB,CAACU,OAAO,CAACE,MAAM,CAAC;IACjEN,OAAO,CAACC,GAAG,CAAC,IAAI,EAACI,eAAe,CAAC;IACjC,OAAO;MAAE,GAAGD,OAAO;MAAEG,YAAY,EAAEF;IAAe,CAAC;EACrD,CAAC,CAAC;EACFL,OAAO,CAACC,GAAG,CAAC,KAAK,EAACF,OAAO,CAAC;EAE1B,OAAOS,OAAO,CAACC,GAAG,CAACP,cAAc,CAAC;AACpC,CAAC,CAAC;AAEF,OAAO,MAAMQ,QAAQ,GAAGtB,WAAW,CAAC;EAClCuB,IAAI,EAAE,KAAK;EACXC,YAAY,EAAE;IACZC,GAAG,EAAE,EAAE;IACPC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACrB,MAAM,CAACsB,OAAO,EAAGC,KAAK,IAAK;MAClCA,KAAK,CAACP,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDK,OAAO,CAACrB,MAAM,CAACwB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC5CF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACR,GAAG,GAAGU,MAAM,CAACC,OAAO;MAC1BxB,OAAO,CAACC,GAAG,CAACoB,KAAK,CAACR,GAAG,CAAC;IACxB,CAAC,CAAC,CACDM,OAAO,CAACrB,MAAM,CAAC2B,QAAQ,EAAGJ,KAAK,IAAK;MACnCA,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeL,QAAQ,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}