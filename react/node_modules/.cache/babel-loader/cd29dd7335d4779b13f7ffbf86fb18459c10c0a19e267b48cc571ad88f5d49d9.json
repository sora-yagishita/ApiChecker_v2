{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const apiSlice = createSlice({\n  name: 'api',\n  initialState: {\n    data: [],\n    status: 'idle',\n    error: null\n  },\n  reducers: {\n    setApiData: state => {\n      state.data = \"aaa\";\n      console.log(\"テスト\");\n    }\n  },\n  extraReducers: builder => {\n    // 非同期なAPI呼び出しの成功時\n    builder.addCase(fetchApiData.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.data = action.payload;\n    });\n    // 非同期なAPI呼び出しの実行中\n    builder.addCase(fetchApiData.pending, state => {\n      state.status = 'loading';\n    });\n    // 非同期なAPI呼び出しの失敗時\n    builder.addCase(fetchApiData.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  setApiData\n} = apiSlice.actions;\nexport const selectApiData = state => state.api.data;\nexport default apiSlice.reducer;","map":{"version":3,"names":["createSlice","apiSlice","name","initialState","data","status","error","reducers","setApiData","state","console","log","extraReducers","builder","addCase","fetchApiData","fulfilled","action","payload","pending","rejected","message","actions","selectApiData","api","reducer"],"sources":["C:/Users/ygst_/myFile/myProject/ApiChecker2/react/src/apiSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const apiSlice = createSlice({\r\n  name: 'api',\r\n  initialState: {\r\n    data: [],\r\n    status: 'idle',\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    setApiData: (state) => {\r\n      state.data = \"aaa\";\r\n      console.log(\"テスト\");\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // 非同期なAPI呼び出しの成功時\r\n    builder.addCase(fetchApiData.fulfilled, (state, action) => {\r\n      state.status = 'succeeded';\r\n      state.data = action.payload;\r\n    });\r\n    // 非同期なAPI呼び出しの実行中\r\n    builder.addCase(fetchApiData.pending, (state) => {\r\n      state.status = 'loading';\r\n    });\r\n    // 非同期なAPI呼び出しの失敗時\r\n    builder.addCase(fetchApiData.rejected, (state, action) => {\r\n      state.status = 'failed';\r\n      state.error = action.error.message;\r\n    });\r\n  },\r\n});\r\n\r\nexport const { setApiData } = apiSlice.actions;\r\n\r\nexport const selectApiData = (state) => state.api.data;\r\n\r\nexport default apiSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,QAAQ,GAAGD,WAAW,CAAC;EAClCE,IAAI,EAAE,KAAK;EACXC,YAAY,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACL,IAAI,GAAG,KAAK;MAClBM,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1B;IACAA,OAAO,CAACC,OAAO,CAACC,YAAY,CAACC,SAAS,EAAE,CAACP,KAAK,EAAEQ,MAAM,KAAK;MACzDR,KAAK,CAACJ,MAAM,GAAG,WAAW;MAC1BI,KAAK,CAACL,IAAI,GAAGa,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC;IACF;IACAL,OAAO,CAACC,OAAO,CAACC,YAAY,CAACI,OAAO,EAAGV,KAAK,IAAK;MAC/CA,KAAK,CAACJ,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC;IACF;IACAQ,OAAO,CAACC,OAAO,CAACC,YAAY,CAACK,QAAQ,EAAE,CAACX,KAAK,EAAEQ,MAAM,KAAK;MACxDR,KAAK,CAACJ,MAAM,GAAG,QAAQ;MACvBI,KAAK,CAACH,KAAK,GAAGW,MAAM,CAACX,KAAK,CAACe,OAAO;IACpC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEb;AAAW,CAAC,GAAGP,QAAQ,CAACqB,OAAO;AAE9C,OAAO,MAAMC,aAAa,GAAId,KAAK,IAAKA,KAAK,CAACe,GAAG,CAACpB,IAAI;AAEtD,eAAeH,QAAQ,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}